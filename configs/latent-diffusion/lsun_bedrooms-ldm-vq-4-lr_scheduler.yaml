model:
  base_learning_rate: 1.5e-4
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    ckpt_path: /home/remote/u7177316/latent-diffusion/models/ldm/lsun_bedrooms/model.ckpt
    # ckpt_path: /home/remote/u7177316/latent-diffusion/logs/2023-06-29T17-04-21_lsun_bedrooms-ldm-vq-4/checkpoints
    #ckpt_path: /home/projects/u7177316/latent-diffusion2/models_dir/lsunchurches_model.ckpt
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: image
    image_size: 64
    channels: 3
    cond_stage_trainable: true
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    # use_scheduler: true
    scheduler_config:
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [0]
        f_min: [1e-6]  # minimum learning rate
        f_max: [1.5e-4]  # maximum learning rate
        f_start: [1.5e-4]  # starting learning rate
        cycle_lengths: [20000]  # halve the learning rate every 20k steps
        verbosity_interval: 1000  # change this as per your requirement
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 256 #64
        in_channels: 3
        out_channels: 3
        model_channels: 224
        attention_resolutions:
        # note: this isn\t actually the resolution but
        # the downsampling factor, i.e. this corresnponds to
        # attention on spatial resolution 8,16,32, as the
        # spatial reolution of the latents is 64 for f4
        - 8
        - 4
        - 2
        num_res_blocks: 2
        channel_mult:
        - 1
        - 2
        - 3
        - 4
        num_head_channels: 32
    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        #ckpt_path: configs/first_stage_models/vq-f4/model.yaml
        embed_dim: 3
        n_embed: 8192
        ddconfig:
          double_z: false
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity
    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenClipImageEmbedder
# data:
#   target: main.DataModuleFromConfig
#   params:
#     batch_size: 48
#     num_workers: 0
#     wrap: false
#     train:
#       target: ldm.data.lsun.LSUNBedroomsTrain
#       params:
#         size: 256
#     validation:
#       target: ldm.data.lsun.LSUNBedroomsValidation
#       params:
#         size: 256
data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 5
    wrap: false
    train:
      target: ldm.data.custom_seg.CustomSegTrain
      params:
        size: 256
    validation:
      target: ldm.data.custom_seg.CustomSegEval
      params:
        size: 256


lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 5000
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True
